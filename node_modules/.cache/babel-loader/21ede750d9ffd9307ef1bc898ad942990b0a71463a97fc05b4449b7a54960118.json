{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\Me\\\\xray-ai\\\\src\\\\components\\\\ExportOptions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Download, FileJson, FileSpreadsheet, FileCode, Copy, Check, Settings } from 'lucide-react';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportOptions = ({\n  testCases\n}) => {\n  _s();\n  const [showOptions, setShowOptions] = useState(false);\n  const [copiedFormat, setCopiedFormat] = useState(null);\n  const [exportSettings, setExportSettings] = useState({\n    includeSteps: true,\n    includeExpectedResults: true,\n    includeTestData: true,\n    includePreconditions: true\n  });\n\n  // JSON Export\n  const exportToJSON = () => {\n    const formattedData = {\n      project: \"X-ray Test Cases\",\n      generatedAt: new Date().toISOString(),\n      totalTestCases: testCases.length,\n      testCases: testCases.map(tc => filterTestCaseData(tc))\n    };\n    const blob = new Blob([JSON.stringify(formattedData, null, 2)], {\n      type: 'application/json;charset=utf-8'\n    });\n    saveAs(blob, `xray-test-cases-${new Date().toISOString().split('T')[0]}.json`);\n  };\n\n  // CSV Export\n  const exportToCSV = () => {\n    const headers = ['Test Case ID', 'Summary', 'Priority', 'Test Type', 'Component', 'Labels', 'Preconditions', 'Test Steps', 'Expected Results', 'Test Data', 'Estimated Time'];\n    const csvContent = [headers.join(','), ...testCases.map(tc => [tc.id, `\"${tc.summary}\"`, tc.priority, tc.testType, tc.component, `\"${tc.labels.join(', ')}\"`, exportSettings.includePreconditions ? `\"${tc.preconditions.join('; ')}\"` : '\"\"', exportSettings.includeSteps ? `\"${tc.steps.join('; ')}\"` : '\"\"', exportSettings.includeExpectedResults ? `\"${tc.expectedResults.join('; ')}\"` : '\"\"', exportSettings.includeTestData ? `\"${JSON.stringify(tc.testData).replace(/\"/g, '\"\"')}\"` : '\"\"', tc.estimatedTime].join(','))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8'\n    });\n    saveAs(blob, `xray-test-cases-${new Date().toISOString().split('T')[0]}.csv`);\n  };\n\n  // Gherkin Export\n  const exportToGherkin = () => {\n    const gherkinContent = generateGherkinContent(testCases);\n    const blob = new Blob([gherkinContent], {\n      type: 'text/plain;charset=utf-8'\n    });\n    saveAs(blob, `test-scenarios-${new Date().toISOString().split('T')[0]}.feature`);\n  };\n\n  // Copy to Clipboard\n  const copyToClipboard = async format => {\n    let content = '';\n    switch (format) {\n      case 'json':\n        content = JSON.stringify({\n          project: \"X-ray Test Cases\",\n          testCases: testCases.map(tc => filterTestCaseData(tc))\n        }, null, 2);\n        break;\n      case 'gherkin':\n        content = generateGherkinContent(testCases);\n        break;\n      case 'csv':\n        // CSV için temel format\n        content = testCases.map(tc => `${tc.id},${tc.summary},${tc.priority},${tc.component}`).join('\\n');\n        break;\n      default:\n        return;\n    }\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopiedFormat(format);\n      setTimeout(() => setCopiedFormat(null), 2000);\n    } catch (err) {\n      console.error('Clipboard copy failed:', err);\n    }\n  };\n\n  // Helper Functions\n  const filterTestCaseData = testCase => {\n    const filtered = {\n      ...testCase\n    };\n    if (!exportSettings.includeSteps) delete filtered.steps;\n    if (!exportSettings.includeExpectedResults) delete filtered.expectedResults;\n    if (!exportSettings.includeTestData) delete filtered.testData;\n    if (!exportSettings.includePreconditions) delete filtered.preconditions;\n    return filtered;\n  };\n  const generateGherkinContent = testCases => {\n    const featureContent = `Feature: Generated Test Scenarios\n  Test case'ler otomatik olarak oluşturulmuştur\n  \n  Background:\n    Given Uygulama test ortamında çalışır durumda\n    And Geçerli kullanıcı ile giriş yapılmış\n\n${testCases.map((tc, index) => `\n  @${tc.labels.join(' @')}\n  Scenario${testCases.length > 1 ? ` ${index + 1}` : ''}: ${tc.summary}\n    ${tc.steps.map(step => `When ${step}`).join('\\n    ')}\n    ${tc.expectedResults.map(result => `Then ${result}`).join('\\n    ')}\n`).join('')}`;\n    return featureContent;\n  };\n  const exportFormats = [{\n    id: 'json',\n    name: 'JSON',\n    description: 'X-ray REST API import için',\n    icon: FileJson,\n    color: 'text-green-600',\n    bgColor: 'bg-green-50 hover:bg-green-100',\n    action: exportToJSON\n  }, {\n    id: 'csv',\n    name: 'CSV',\n    description: 'Excel/Spreadsheet import için',\n    icon: FileSpreadsheet,\n    color: 'text-blue-600',\n    bgColor: 'bg-blue-50 hover:bg-blue-100',\n    action: exportToCSV\n  }, {\n    id: 'gherkin',\n    name: 'Gherkin',\n    description: 'BDD/Cucumber için',\n    icon: FileCode,\n    color: 'text-purple-600',\n    bgColor: 'bg-purple-50 hover:bg-purple-100',\n    action: exportToGherkin\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowOptions(!showOptions),\n      className: \"btn-primary flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(Download, {\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Export Test Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 top-full mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-gray-900 mb-1\",\n          children: \"Export Se\\xE7enekleri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [testCases.length, \" test case'i farkl\\u0131 formatlarda export edin\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium text-gray-900 mb-3 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), \"Export Ayarlar\\u0131\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [{\n            key: 'includeSteps',\n            label: 'Test adımları dahil et'\n          }, {\n            key: 'includeExpectedResults',\n            label: 'Beklenen sonuçlar dahil et'\n          }, {\n            key: 'includeTestData',\n            label: 'Test verileri dahil et'\n          }, {\n            key: 'includePreconditions',\n            label: 'Ön koşullar dahil et'\n          }].map(({\n            key,\n            label\n          }) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center space-x-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportSettings[key],\n              onChange: e => setExportSettings({\n                ...exportSettings,\n                [key]: e.target.checked\n              }),\n              className: \"rounded border-gray-300 text-xray-blue focus:ring-xray-blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-700\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 space-y-3\",\n        children: exportFormats.map(({\n          id,\n          name,\n          description,\n          icon: Icon,\n          color,\n          bgColor,\n          action\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${bgColor} border border-gray-200 rounded-lg p-3 transition-colors duration-200`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                className: `h-5 w-5 ${color}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-gray-900\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600\",\n                  children: description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => copyToClipboard(id),\n                className: \"p-1 hover:bg-white rounded transition-colors\",\n                title: \"Panoya kopyala\",\n                children: copiedFormat === id ? /*#__PURE__*/_jsxDEV(Check, {\n                  className: \"h-4 w-4 text-green-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(Copy, {\n                  className: \"h-4 w-4 text-gray-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: action,\n                className: \"px-3 py-1 bg-white hover:bg-gray-50 border border-gray-300 rounded text-sm transition-colors\",\n                children: \"\\u0130ndir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-50 rounded-b-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"JSON:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 21\n            }, this), \" X-ray REST API ile direkt import\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCCA \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"CSV:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), \" Excel'de d\\xFCzenleme ve toplu import\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83E\\uDD52 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gherkin:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this), \" Cucumber/SpecFlow entegrasyonu\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOptions(false),\n        className: \"absolute top-2 right-2 p-1 hover:bg-gray-100 rounded transition-colors\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), showOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-40\",\n      onClick: () => setShowOptions(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(ExportOptions, \"jNK6P2Lugy4u0LkXdFQ6l+9yu64=\");\n_c = ExportOptions;\nexport default ExportOptions;\nvar _c;\n$RefreshReg$(_c, \"ExportOptions\");","map":{"version":3,"names":["React","useState","Download","FileJson","FileSpreadsheet","FileCode","Copy","Check","Settings","saveAs","jsxDEV","_jsxDEV","ExportOptions","testCases","_s","showOptions","setShowOptions","copiedFormat","setCopiedFormat","exportSettings","setExportSettings","includeSteps","includeExpectedResults","includeTestData","includePreconditions","exportToJSON","formattedData","project","generatedAt","Date","toISOString","totalTestCases","length","map","tc","filterTestCaseData","blob","Blob","JSON","stringify","type","split","exportToCSV","headers","csvContent","join","id","summary","priority","testType","component","labels","preconditions","steps","expectedResults","testData","replace","estimatedTime","exportToGherkin","gherkinContent","generateGherkinContent","copyToClipboard","format","content","navigator","clipboard","writeText","setTimeout","err","console","error","testCase","filtered","featureContent","index","step","result","exportFormats","name","description","icon","color","bgColor","action","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","key","label","checked","onChange","e","target","Icon","title","_c","$RefreshReg$"],"sources":["D:/Dev/Me/xray-ai/src/components/ExportOptions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Download, \n  FileJson, \n  FileSpreadsheet, \n  FileCode,\n  Copy,\n  Check,\n  Settings\n} from 'lucide-react';\nimport { saveAs } from 'file-saver';\n\nconst ExportOptions = ({ testCases }) => {\n  const [showOptions, setShowOptions] = useState(false);\n  const [copiedFormat, setCopiedFormat] = useState(null);\n  const [exportSettings, setExportSettings] = useState({\n    includeSteps: true,\n    includeExpectedResults: true,\n    includeTestData: true,\n    includePreconditions: true\n  });\n\n  // JSON Export\n  const exportToJSON = () => {\n    const formattedData = {\n      project: \"X-ray Test Cases\",\n      generatedAt: new Date().toISOString(),\n      totalTestCases: testCases.length,\n      testCases: testCases.map(tc => filterTestCaseData(tc))\n    };\n\n    const blob = new Blob([JSON.stringify(formattedData, null, 2)], {\n      type: 'application/json;charset=utf-8'\n    });\n    saveAs(blob, `xray-test-cases-${new Date().toISOString().split('T')[0]}.json`);\n  };\n\n  // CSV Export\n  const exportToCSV = () => {\n    const headers = [\n      'Test Case ID',\n      'Summary',\n      'Priority',\n      'Test Type',\n      'Component',\n      'Labels',\n      'Preconditions',\n      'Test Steps',\n      'Expected Results',\n      'Test Data',\n      'Estimated Time'\n    ];\n\n    const csvContent = [\n      headers.join(','),\n      ...testCases.map(tc => [\n        tc.id,\n        `\"${tc.summary}\"`,\n        tc.priority,\n        tc.testType,\n        tc.component,\n        `\"${tc.labels.join(', ')}\"`,\n        exportSettings.includePreconditions ? `\"${tc.preconditions.join('; ')}\"` : '\"\"',\n        exportSettings.includeSteps ? `\"${tc.steps.join('; ')}\"` : '\"\"',\n        exportSettings.includeExpectedResults ? `\"${tc.expectedResults.join('; ')}\"` : '\"\"',\n        exportSettings.includeTestData ? `\"${JSON.stringify(tc.testData).replace(/\"/g, '\"\"')}\"` : '\"\"',\n        tc.estimatedTime\n      ].join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\n    saveAs(blob, `xray-test-cases-${new Date().toISOString().split('T')[0]}.csv`);\n  };\n\n  // Gherkin Export\n  const exportToGherkin = () => {\n    const gherkinContent = generateGherkinContent(testCases);\n    const blob = new Blob([gherkinContent], { type: 'text/plain;charset=utf-8' });\n    saveAs(blob, `test-scenarios-${new Date().toISOString().split('T')[0]}.feature`);\n  };\n\n  // Copy to Clipboard\n  const copyToClipboard = async (format) => {\n    let content = '';\n    \n    switch (format) {\n      case 'json':\n        content = JSON.stringify({\n          project: \"X-ray Test Cases\",\n          testCases: testCases.map(tc => filterTestCaseData(tc))\n        }, null, 2);\n        break;\n      case 'gherkin':\n        content = generateGherkinContent(testCases);\n        break;\n      case 'csv':\n        // CSV için temel format\n        content = testCases.map(tc => \n          `${tc.id},${tc.summary},${tc.priority},${tc.component}`\n        ).join('\\n');\n        break;\n      default:\n        return;\n    }\n\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopiedFormat(format);\n      setTimeout(() => setCopiedFormat(null), 2000);\n    } catch (err) {\n      console.error('Clipboard copy failed:', err);\n    }\n  };\n\n  // Helper Functions\n  const filterTestCaseData = (testCase) => {\n    const filtered = { ...testCase };\n    \n    if (!exportSettings.includeSteps) delete filtered.steps;\n    if (!exportSettings.includeExpectedResults) delete filtered.expectedResults;\n    if (!exportSettings.includeTestData) delete filtered.testData;\n    if (!exportSettings.includePreconditions) delete filtered.preconditions;\n    \n    return filtered;\n  };\n\n  const generateGherkinContent = (testCases) => {\n    const featureContent = `Feature: Generated Test Scenarios\n  Test case'ler otomatik olarak oluşturulmuştur\n  \n  Background:\n    Given Uygulama test ortamında çalışır durumda\n    And Geçerli kullanıcı ile giriş yapılmış\n\n${testCases.map((tc, index) => `\n  @${tc.labels.join(' @')}\n  Scenario${testCases.length > 1 ? ` ${index + 1}` : ''}: ${tc.summary}\n    ${tc.steps.map(step => `When ${step}`).join('\\n    ')}\n    ${tc.expectedResults.map(result => `Then ${result}`).join('\\n    ')}\n`).join('')}`;\n\n    return featureContent;\n  };\n\n  const exportFormats = [\n    {\n      id: 'json',\n      name: 'JSON',\n      description: 'X-ray REST API import için',\n      icon: FileJson,\n      color: 'text-green-600',\n      bgColor: 'bg-green-50 hover:bg-green-100',\n      action: exportToJSON\n    },\n    {\n      id: 'csv',\n      name: 'CSV',\n      description: 'Excel/Spreadsheet import için',\n      icon: FileSpreadsheet,\n      color: 'text-blue-600',\n      bgColor: 'bg-blue-50 hover:bg-blue-100',\n      action: exportToCSV\n    },\n    {\n      id: 'gherkin',\n      name: 'Gherkin',\n      description: 'BDD/Cucumber için',\n      icon: FileCode,\n      color: 'text-purple-600',\n      bgColor: 'bg-purple-50 hover:bg-purple-100',\n      action: exportToGherkin\n    }\n  ];\n\n  return (\n    <div className=\"relative\">\n      {/* Main Export Button */}\n      <button\n        onClick={() => setShowOptions(!showOptions)}\n        className=\"btn-primary flex items-center space-x-2\"\n      >\n        <Download className=\"h-4 w-4\" />\n        <span>Export Test Cases</span>\n      </button>\n\n      {/* Export Options Dropdown */}\n      {showOptions && (\n        <div className=\"absolute right-0 top-full mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n          \n          {/* Header */}\n          <div className=\"p-4 border-b border-gray-200\">\n            <h3 className=\"font-medium text-gray-900 mb-1\">Export Seçenekleri</h3>\n            <p className=\"text-sm text-gray-600\">\n              {testCases.length} test case'i farklı formatlarda export edin\n            </p>\n          </div>\n\n          {/* Export Settings */}\n          <div className=\"p-4 border-b border-gray-200\">\n            <h4 className=\"font-medium text-gray-900 mb-3 flex items-center\">\n              <Settings className=\"h-4 w-4 mr-1\" />\n              Export Ayarları\n            </h4>\n            <div className=\"space-y-2\">\n              {[\n                { key: 'includeSteps', label: 'Test adımları dahil et' },\n                { key: 'includeExpectedResults', label: 'Beklenen sonuçlar dahil et' },\n                { key: 'includeTestData', label: 'Test verileri dahil et' },\n                { key: 'includePreconditions', label: 'Ön koşullar dahil et' }\n              ].map(({ key, label }) => (\n                <label key={key} className=\"flex items-center space-x-2 text-sm\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportSettings[key]}\n                    onChange={(e) => setExportSettings({\n                      ...exportSettings,\n                      [key]: e.target.checked\n                    })}\n                    className=\"rounded border-gray-300 text-xray-blue focus:ring-xray-blue\"\n                  />\n                  <span className=\"text-gray-700\">{label}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n\n          {/* Export Formats */}\n          <div className=\"p-4 space-y-3\">\n            {exportFormats.map(({ id, name, description, icon: Icon, color, bgColor, action }) => (\n              <div\n                key={id}\n                className={`${bgColor} border border-gray-200 rounded-lg p-3 transition-colors duration-200`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Icon className={`h-5 w-5 ${color}`} />\n                    <div>\n                      <div className=\"font-medium text-gray-900\">{name}</div>\n                      <div className=\"text-sm text-gray-600\">{description}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    {/* Copy Button */}\n                    <button\n                      onClick={() => copyToClipboard(id)}\n                      className=\"p-1 hover:bg-white rounded transition-colors\"\n                      title=\"Panoya kopyala\"\n                    >\n                      {copiedFormat === id ? (\n                        <Check className=\"h-4 w-4 text-green-600\" />\n                      ) : (\n                        <Copy className=\"h-4 w-4 text-gray-500\" />\n                      )}\n                    </button>\n                    {/* Download Button */}\n                    <button\n                      onClick={action}\n                      className=\"px-3 py-1 bg-white hover:bg-gray-50 border border-gray-300 rounded text-sm transition-colors\"\n                    >\n                      İndir\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Footer Info */}\n          <div className=\"p-4 bg-gray-50 rounded-b-lg\">\n            <div className=\"text-xs text-gray-600 space-y-1\">\n              <p>💡 <strong>JSON:</strong> X-ray REST API ile direkt import</p>\n              <p>📊 <strong>CSV:</strong> Excel'de düzenleme ve toplu import</p>\n              <p>🥒 <strong>Gherkin:</strong> Cucumber/SpecFlow entegrasyonu</p>\n            </div>\n          </div>\n\n          {/* Close Button */}\n          <button\n            onClick={() => setShowOptions(false)}\n            className=\"absolute top-2 right-2 p-1 hover:bg-gray-100 rounded transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      {/* Background Overlay */}\n      {showOptions && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setShowOptions(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ExportOptions; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,QAAQ,EACRC,QAAQ,EACRC,eAAe,EACfC,QAAQ,EACRC,IAAI,EACJC,KAAK,EACLC,QAAQ,QACH,cAAc;AACrB,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC;IACnDoB,YAAY,EAAE,IAAI;IAClBC,sBAAsB,EAAE,IAAI;IAC5BC,eAAe,EAAE,IAAI;IACrBC,oBAAoB,EAAE;EACxB,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAG;MACpBC,OAAO,EAAE,kBAAkB;MAC3BC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACrCC,cAAc,EAAElB,SAAS,CAACmB,MAAM;MAChCnB,SAAS,EAAEA,SAAS,CAACoB,GAAG,CAACC,EAAE,IAAIC,kBAAkB,CAACD,EAAE,CAAC;IACvD,CAAC;IAED,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACb,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;MAC9Dc,IAAI,EAAE;IACR,CAAC,CAAC;IACF/B,MAAM,CAAC2B,IAAI,EAAE,mBAAmB,IAAIP,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;EAChF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG,CACd,cAAc,EACd,SAAS,EACT,UAAU,EACV,WAAW,EACX,WAAW,EACX,QAAQ,EACR,eAAe,EACf,YAAY,EACZ,kBAAkB,EAClB,WAAW,EACX,gBAAgB,CACjB;IAED,MAAMC,UAAU,GAAG,CACjBD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,EACjB,GAAGhC,SAAS,CAACoB,GAAG,CAACC,EAAE,IAAI,CACrBA,EAAE,CAACY,EAAE,EACL,IAAIZ,EAAE,CAACa,OAAO,GAAG,EACjBb,EAAE,CAACc,QAAQ,EACXd,EAAE,CAACe,QAAQ,EACXf,EAAE,CAACgB,SAAS,EACZ,IAAIhB,EAAE,CAACiB,MAAM,CAACN,IAAI,CAAC,IAAI,CAAC,GAAG,EAC3B1B,cAAc,CAACK,oBAAoB,GAAG,IAAIU,EAAE,CAACkB,aAAa,CAACP,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EAC/E1B,cAAc,CAACE,YAAY,GAAG,IAAIa,EAAE,CAACmB,KAAK,CAACR,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EAC/D1B,cAAc,CAACG,sBAAsB,GAAG,IAAIY,EAAE,CAACoB,eAAe,CAACT,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EACnF1B,cAAc,CAACI,eAAe,GAAG,IAAIe,IAAI,CAACC,SAAS,CAACL,EAAE,CAACqB,QAAQ,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,EAC9FtB,EAAE,CAACuB,aAAa,CACjB,CAACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CACb,CAACA,IAAI,CAAC,IAAI,CAAC;IAEZ,MAAMT,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACO,UAAU,CAAC,EAAE;MAAEJ,IAAI,EAAE;IAAyB,CAAC,CAAC;IACvE/B,MAAM,CAAC2B,IAAI,EAAE,mBAAmB,IAAIP,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;EAC/E,CAAC;;EAED;EACA,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,cAAc,GAAGC,sBAAsB,CAAC/C,SAAS,CAAC;IACxD,MAAMuB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACsB,cAAc,CAAC,EAAE;MAAEnB,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC7E/B,MAAM,CAAC2B,IAAI,EAAE,kBAAkB,IAAIP,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;EAClF,CAAC;;EAED;EACA,MAAMoB,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,IAAIC,OAAO,GAAG,EAAE;IAEhB,QAAQD,MAAM;MACZ,KAAK,MAAM;QACTC,OAAO,GAAGzB,IAAI,CAACC,SAAS,CAAC;UACvBZ,OAAO,EAAE,kBAAkB;UAC3Bd,SAAS,EAAEA,SAAS,CAACoB,GAAG,CAACC,EAAE,IAAIC,kBAAkB,CAACD,EAAE,CAAC;QACvD,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACX;MACF,KAAK,SAAS;QACZ6B,OAAO,GAAGH,sBAAsB,CAAC/C,SAAS,CAAC;QAC3C;MACF,KAAK,KAAK;QACR;QACAkD,OAAO,GAAGlD,SAAS,CAACoB,GAAG,CAACC,EAAE,IACxB,GAAGA,EAAE,CAACY,EAAE,IAAIZ,EAAE,CAACa,OAAO,IAAIb,EAAE,CAACc,QAAQ,IAAId,EAAE,CAACgB,SAAS,EACvD,CAAC,CAACL,IAAI,CAAC,IAAI,CAAC;QACZ;MACF;QACE;IACJ;IAEA,IAAI;MACF,MAAMmB,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,OAAO,CAAC;MAC5C7C,eAAe,CAAC4C,MAAM,CAAC;MACvBK,UAAU,CAAC,MAAMjD,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOkD,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMjC,kBAAkB,GAAIoC,QAAQ,IAAK;IACvC,MAAMC,QAAQ,GAAG;MAAE,GAAGD;IAAS,CAAC;IAEhC,IAAI,CAACpD,cAAc,CAACE,YAAY,EAAE,OAAOmD,QAAQ,CAACnB,KAAK;IACvD,IAAI,CAAClC,cAAc,CAACG,sBAAsB,EAAE,OAAOkD,QAAQ,CAAClB,eAAe;IAC3E,IAAI,CAACnC,cAAc,CAACI,eAAe,EAAE,OAAOiD,QAAQ,CAACjB,QAAQ;IAC7D,IAAI,CAACpC,cAAc,CAACK,oBAAoB,EAAE,OAAOgD,QAAQ,CAACpB,aAAa;IAEvE,OAAOoB,QAAQ;EACjB,CAAC;EAED,MAAMZ,sBAAsB,GAAI/C,SAAS,IAAK;IAC5C,MAAM4D,cAAc,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,EAAE5D,SAAS,CAACoB,GAAG,CAAC,CAACC,EAAE,EAAEwC,KAAK,KAAK;AAC/B,KAAKxC,EAAE,CAACiB,MAAM,CAACN,IAAI,CAAC,IAAI,CAAC;AACzB,YAAYhC,SAAS,CAACmB,MAAM,GAAG,CAAC,GAAG,IAAI0C,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAKxC,EAAE,CAACa,OAAO;AACtE,MAAMb,EAAE,CAACmB,KAAK,CAACpB,GAAG,CAAC0C,IAAI,IAAI,QAAQA,IAAI,EAAE,CAAC,CAAC9B,IAAI,CAAC,QAAQ,CAAC;AACzD,MAAMX,EAAE,CAACoB,eAAe,CAACrB,GAAG,CAAC2C,MAAM,IAAI,QAAQA,MAAM,EAAE,CAAC,CAAC/B,IAAI,CAAC,QAAQ,CAAC;AACvE,CAAC,CAAC,CAACA,IAAI,CAAC,EAAE,CAAC,EAAE;IAET,OAAO4B,cAAc;EACvB,CAAC;EAED,MAAMI,aAAa,GAAG,CACpB;IACE/B,EAAE,EAAE,MAAM;IACVgC,IAAI,EAAE,MAAM;IACZC,WAAW,EAAE,4BAA4B;IACzCC,IAAI,EAAE7E,QAAQ;IACd8E,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAE,gCAAgC;IACzCC,MAAM,EAAE1D;EACV,CAAC,EACD;IACEqB,EAAE,EAAE,KAAK;IACTgC,IAAI,EAAE,KAAK;IACXC,WAAW,EAAE,+BAA+B;IAC5CC,IAAI,EAAE5E,eAAe;IACrB6E,KAAK,EAAE,eAAe;IACtBC,OAAO,EAAE,8BAA8B;IACvCC,MAAM,EAAEzC;EACV,CAAC,EACD;IACEI,EAAE,EAAE,SAAS;IACbgC,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,mBAAmB;IAChCC,IAAI,EAAE3E,QAAQ;IACd4E,KAAK,EAAE,iBAAiB;IACxBC,OAAO,EAAE,kCAAkC;IAC3CC,MAAM,EAAEzB;EACV,CAAC,CACF;EAED,oBACE/C,OAAA;IAAKyE,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAEvB1E,OAAA;MACE2E,OAAO,EAAEA,CAAA,KAAMtE,cAAc,CAAC,CAACD,WAAW,CAAE;MAC5CqE,SAAS,EAAC,yCAAyC;MAAAC,QAAA,gBAEnD1E,OAAA,CAACT,QAAQ;QAACkF,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChC/E,OAAA;QAAA0E,QAAA,EAAM;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EAGR3E,WAAW,iBACVJ,OAAA;MAAKyE,SAAS,EAAC,+FAA+F;MAAAC,QAAA,gBAG5G1E,OAAA;QAAKyE,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3C1E,OAAA;UAAIyE,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtE/E,OAAA;UAAGyE,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GACjCxE,SAAS,CAACmB,MAAM,EAAC,kDACpB;QAAA;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGN/E,OAAA;QAAKyE,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3C1E,OAAA;UAAIyE,SAAS,EAAC,kDAAkD;UAAAC,QAAA,gBAC9D1E,OAAA,CAACH,QAAQ;YAAC4E,SAAS,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,wBAEvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL/E,OAAA;UAAKyE,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvB,CACC;YAAEM,GAAG,EAAE,cAAc;YAAEC,KAAK,EAAE;UAAyB,CAAC,EACxD;YAAED,GAAG,EAAE,wBAAwB;YAAEC,KAAK,EAAE;UAA6B,CAAC,EACtE;YAAED,GAAG,EAAE,iBAAiB;YAAEC,KAAK,EAAE;UAAyB,CAAC,EAC3D;YAAED,GAAG,EAAE,sBAAsB;YAAEC,KAAK,EAAE;UAAuB,CAAC,CAC/D,CAAC3D,GAAG,CAAC,CAAC;YAAE0D,GAAG;YAAEC;UAAM,CAAC,kBACnBjF,OAAA;YAAiByE,SAAS,EAAC,qCAAqC;YAAAC,QAAA,gBAC9D1E,OAAA;cACE6B,IAAI,EAAC,UAAU;cACfqD,OAAO,EAAE1E,cAAc,CAACwE,GAAG,CAAE;cAC7BG,QAAQ,EAAGC,CAAC,IAAK3E,iBAAiB,CAAC;gBACjC,GAAGD,cAAc;gBACjB,CAACwE,GAAG,GAAGI,CAAC,CAACC,MAAM,CAACH;cAClB,CAAC,CAAE;cACHT,SAAS,EAAC;YAA6D;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,eACF/E,OAAA;cAAMyE,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEO;YAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAVpCC,GAAG;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWR,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN/E,OAAA;QAAKyE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BR,aAAa,CAAC5C,GAAG,CAAC,CAAC;UAAEa,EAAE;UAAEgC,IAAI;UAAEC,WAAW;UAAEC,IAAI,EAAEiB,IAAI;UAAEhB,KAAK;UAAEC,OAAO;UAAEC;QAAO,CAAC,kBAC/ExE,OAAA;UAEEyE,SAAS,EAAE,GAAGF,OAAO,uEAAwE;UAAAG,QAAA,eAE7F1E,OAAA;YAAKyE,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAChD1E,OAAA;cAAKyE,SAAS,EAAC,6BAA6B;cAAAC,QAAA,gBAC1C1E,OAAA,CAACsF,IAAI;gBAACb,SAAS,EAAE,WAAWH,KAAK;cAAG;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvC/E,OAAA;gBAAA0E,QAAA,gBACE1E,OAAA;kBAAKyE,SAAS,EAAC,2BAA2B;kBAAAC,QAAA,EAAEP;gBAAI;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvD/E,OAAA;kBAAKyE,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAEN;gBAAW;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACN/E,OAAA;cAAKyE,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAE7B1E,OAAA;gBACE2E,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAACf,EAAE,CAAE;gBACnCsC,SAAS,EAAC,8CAA8C;gBACxDc,KAAK,EAAC,gBAAgB;gBAAAb,QAAA,EAErBpE,YAAY,KAAK6B,EAAE,gBAClBnC,OAAA,CAACJ,KAAK;kBAAC6E,SAAS,EAAC;gBAAwB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAE5C/E,OAAA,CAACL,IAAI;kBAAC8E,SAAS,EAAC;gBAAuB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAC1C;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eAET/E,OAAA;gBACE2E,OAAO,EAAEH,MAAO;gBAChBC,SAAS,EAAC,8FAA8F;gBAAAC,QAAA,EACzG;cAED;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAhCD5C,EAAE;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiCJ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN/E,OAAA;QAAKyE,SAAS,EAAC,6BAA6B;QAAAC,QAAA,eAC1C1E,OAAA;UAAKyE,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC9C1E,OAAA;YAAA0E,QAAA,GAAG,eAAG,eAAA1E,OAAA;cAAA0E,QAAA,EAAQ;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,qCAAiC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACjE/E,OAAA;YAAA0E,QAAA,GAAG,eAAG,eAAA1E,OAAA;cAAA0E,QAAA,EAAQ;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,0CAAmC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAClE/E,OAAA;YAAA0E,QAAA,GAAG,eAAG,eAAA1E,OAAA;cAAA0E,QAAA,EAAQ;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,mCAA+B;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN/E,OAAA;QACE2E,OAAO,EAAEA,CAAA,KAAMtE,cAAc,CAAC,KAAK,CAAE;QACrCoE,SAAS,EAAC,wEAAwE;QAAAC,QAAA,EACnF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAGA3E,WAAW,iBACVJ,OAAA;MACEyE,SAAS,EAAC,oBAAoB;MAC9BE,OAAO,EAAEA,CAAA,KAAMtE,cAAc,CAAC,KAAK;IAAE;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5E,EAAA,CA3RIF,aAAa;AAAAuF,EAAA,GAAbvF,aAAa;AA6RnB,eAAeA,aAAa;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}